{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/Section/Section.js","data/constans.js","components/Container/Container.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css"],"names":["FeedbackButton","feedback","onLeaveFeedback","className","styles","feedbackBtn","type","data-feedback","onClick","FeedbackOptions","options","map","option","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","FEEDBACK_OPTIONS","Container","App","state","handleFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositivePercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAEMA,EAAiB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAClC,OACE,wBACEC,UAAWC,IAAOC,YAClBC,KAAK,SACLC,gBAAeN,EACfO,QAASN,EAJX,SAMGD,KAeQQ,EAXS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASR,EAAsB,EAAtBA,gBAClC,OAAOQ,EAAQC,KAAI,SAAAC,GAAM,OACvB,cAAC,EAAD,CAAgBX,SAAUW,EAAQV,gBAAiBA,QCNxCW,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCsBEC,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAiB,IAAVD,EACL,cAAC,EAAD,CAAcL,QAAS,sBAEvB,+BACE,wCAAWE,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCISC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCNMC,EAAmB,CAAC,OAAQ,UAAW,O,gBCOrCC,EAJG,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAChB,qBAAKpB,UAAWC,IAAOqB,UAAvB,SAAmCF,KCwDtBG,E,4MAnDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,eAAiB,YAAiB,IACxB3B,EADuB,EAAb4B,OACUC,QAApB7B,SACR,EAAK8B,UAAS,SAAAC,GAAS,sBAAQ/B,EAAW+B,EAAU/B,GAAY,O,EAGlEgC,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBX,KADiB,EACXC,QADW,EACFC,K,EAIzBgB,wBAA0B,WAAO,IACvBlB,EAAS,EAAKW,MAAdX,KACFG,EAAQ,EAAKc,qBACnB,OAAOE,KAAKC,MAAOpB,EAAOG,EAAS,MAAQ,G,4CAG7C,WAAU,IAAD,EACwBkB,KAAKV,MAA5BX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQkB,KAAKJ,qBACbb,EAAqBiB,KAAKH,0BAEhC,OACE,8BACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAASc,EACTtB,gBAAiBmC,KAAKT,mBAG1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACE,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,e,GA3ChBkB,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,YAAc,uC,kBCAhCD,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.d395c19c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      className={styles.feedbackBtn}\r\n      type=\"button\"\r\n      data-feedback={feedback}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <FeedbackButton feedback={option} onLeaveFeedback={onLeaveFeedback} />\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return total === 0 ? (\r\n    <Notification message={'No feedback given'} />\r\n  ) : (\r\n    <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Section from './components/Section/Section';\r\n\r\nimport { FEEDBACK_OPTIONS } from './data/constans';\r\nimport Container from './components/Container/Container';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleFeedback = ({ target }) => {\r\n    const { feedback } = target.dataset;\r\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositivePercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return Math.round((good / total) * 100) || 0;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositivePercentage();\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n              options={FEEDBACK_OPTIONS}\r\n              onLeaveFeedback={this.handleFeedback}\r\n            />\r\n          </Section>\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          </Section>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__f9cG1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__eM9NK\"};"],"sourceRoot":""}